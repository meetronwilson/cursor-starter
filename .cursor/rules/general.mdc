---
description: Follow these rules for all requests
globs: 
alwaysApply: true
---
---
description: Follow these rules for all requests.
globs: 
---
# Project Instructions

Use specification and guidelines as you build the app.

Write the complete code for every step. Do not get lazy.

Your goal is to completely finish whatever I ask for.

You will see  tags in the code. These are context tags that you should use to help you understand the codebase.

## Overview

- We are building a fully featured Slack clone.  
- We will build this in phases and steps.  
- Please refer to [project-steps.md](mdc:slack-clone-claude/project-steps.md) to see the steps to guide you
- Only work on the step(s) I tell you and nothing more
- Once you have completed a step(s) then mark them as done
- Once you have marked your step complete stop and I will provide more instructions

## Tech Stack

- Frontend: Next.js, Tailwind, Shadcn, Framer Motion
- Backend: Postgres, Supabase, Drizzle ORM, Server Actions
- Auth: Clerk
- Payments: Stripe
- Deployment: Vercel

## Project Structure

- `actions` - Server actions
  - `db` - Database related actions
  - Other actions
- `app` - Next.js app router
  - `api` - API routes
  - `route` - An example route
    - `_components` - One-off components for the route
    - `layout.tsx` - Layout for the route
    - `page.tsx` - Page for the route
- `components` - Shared components
  - `ui` - UI components
  - `utilities` - Utility components
- `db` - Database
  - `schema` - Database schemas
- `lib` - Library code
  - `hooks` - Custom hooks
- `prompts` - Prompt files
- `public` - Static assets
- `types` - Type definitions

## Rules

You **must** follow one or more of these rules before proceeding to writing code
**Announce** which rule(s) you are following
If you do not find a rule that applies please present a plan for approval before writing code
- auth work should follow @auth.mdc
- Backend work should follow @backend.mdc 
- env varialbes should follow @env.mdc
- Frontend work should follow @frontend.mdc rules
- payments work should follow @payments.mdc
- storage work should follow @storage.mdc
- types work should follow @types.mdc

### General Rules

- All files should have a comment at the very top of the file that consisely explain what it does
- Use `@` to import anything from the app unless otherwise specified
- Use kebab case for all files and folders unless otherwise specified
- Don't update shadcn components unless otherwise specified